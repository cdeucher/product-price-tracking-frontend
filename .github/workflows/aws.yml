name: Deploy to S3 Bucket

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - 'features/**'

env:
  AWS_REGION: 'us-east-1'

permissions:
  contents: read

jobs:
  bootstrap:
    name: Bootstrap
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16.16.x'

      - name: Cache node modules
        id: cache-modules
        uses: actions/cache@v3
        env:
          cache-name: cache-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - run: npm install @angular/cli

      - name: Install Dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: |
          npm ci

  build:
    name: Build
    runs-on: ubuntu-latest
    environment: development
    needs: bootstrap
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16.16.x'

      - name: Get commit cache
        id: commit-cache
        run: |
          echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Restore node modules
        id: cache-modules
        uses: actions/cache/restore@v3
        env:
          cache-name: cache-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - run: npm run lint
      - run: npm run build

      - uses: actions/cache/save@v3
        with:
          path: dist
          key: ${{ runner.os }}-${{ steps.commit-cache.outputs.commit }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: development
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get commit cache
        id: commit-cache
        run: |
          echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - uses: actions/cache/restore@v3
        with:
          path: dist
          key: ${{ runner.os }}-${{ steps.commit-cache.outputs.commit }}

      - name: Push to S3
        id: s3
        run: |
          aws s3 sync ./dist/app/ "s3://${{ secrets.BUCKET }}/app/" --exclude '.*'

      - name: CloudFront Invalidation
        id: cloudfront
        run: |
          aws cloudfront create-invalidation --paths="/*" --distribution-id="${{ secrets.CF_DISTRIBUTION }}" \
          --query Invalidation.Id --output text
